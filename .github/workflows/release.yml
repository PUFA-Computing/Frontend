name: Release

on:
  push:
    branches:
      - '+([0-9])?(.{+([0-9]),x}).x'
      - master
      - next
      - next-major
      - beta
      - alpha

permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance verification
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm install
      - name: Semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release

  build_and_push:
    needs: publish
    environment: productiong
    runs-on: ubuntu-latest
    steps:
      - name: Get latest github release tag from api
        id: get_latest_release
        run: |
          echo "::set-output name=latest_release::$(curl -s https://api.github.com/repos/PUFA-Computing/Frontend/releases/latest | jq -r '.tag_name')"
      - uses: actions/checkout@v3
      - name: Generate .env file
        run: |
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" > .env
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
          echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" >> .env
      - name: Ensure .env file exists
        run: touch .env
      - name: Build the Docker image
        run: |
          docker login -u kizoukun -p ${{ secrets.GH_TOKEN }} ghcr.io
          docker build -t ghcr.io/kizoukun/pufafrontend:${{ github.sha }} -f docker/production/Dockerfile .
          docker tag ghcr.io/kizoukun/pufafrontend:${{ github.sha }} ghcr.io/kizoukun/pufafrontend:${{ steps.get_latest_release.outputs.latest_release }}
          docker push ghcr.io/kizoukun/pufafrontend:${{ github.sha }}
          docker push ghcr.io/kizoukun/pufafrontend:${{ steps.get_latest_release.outputs.latest_release }}
          if [ "${{ github.ref }}" == "refs/heads/master" ]; then
            docker tag ghcr.io/kizoukun/pufafrontend:${{ github.sha }} ghcr.io/kizoukun/pufafrontend:latest
            docker push ghcr.io/kizoukun/pufafrontend:latest
          fi

  deployments:
    runs-on: ubuntu-latest
    needs: build_and_push
    environment: production
    steps:
      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            whoami
            docker stop ${{ vars.CONTAINER_NAME }} || true && docker rm ${{ vars.CONTAINER_NAME }} || true
            docker pull ${{ vars.IMAGE_NAME }}
            docker run -d -p ${{ secrets.API_PORT }}:3000 --name ${{ vars.CONTAINER_NAME }} ${{ vars.IMAGE_NAME }}
