name: Release

on:
  push:
    branches:
      - master
      - main
      - next
      - next-major
      - beta
      - alpha

permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    outputs:
      new_tag_version: ${{ steps.tag_version.outputs.new_tag_version }}
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance verification
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm install
      - name: Dry run to get the next release version
        id: tag_version
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          NEXT_TAG_VERSION=$(npx semantic-release --dry-run | grep 'The next release version is' | sed -E 's/.* ([[:digit:].]+)$/\1/')
          echo "new_tag_version=${NEXT_TAG_VERSION}" >> $GITHUB_ENV
      - name: Build app
        run: npm run build
      - name: Semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release

  build_and_push:
    needs: publish
    if: ${{ needs.publish.outputs.new_tag_version != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: |
          docker login -u kizoukun -p ${{ secrets.GH_TOKEN }} ghcr.io
          docker build --build-arg NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} -t ghcr.io/kizoukun/pufafrontend:${{ github.sha }} .
          docker tag ghcr.io/kizoukun/pufafrontend:${{ github.sha }} ghcr.io/kizoukun/pufafrontend:${{ needs.publish.outputs.new_tag_version }}
          docker push ghcr.io/kizoukun/pufafrontend:${{ github.sha }}
          docker push ghcr.io/kizoukun/pufafrontend:${{ needs.publish.outputs.new_tag_version }}
          if [ "${{ github.ref }}" == "refs/heads/master" ]; then
            docker tag ghcr.io/kizoukun/pufafrontend:${{ github.sha }} ghcr.io/kizoukun/pufafrontend:latest
            docker push ghcr.io/kizoukun/pufafrontend:latest
          fi

  deployments:
    runs-on: ubuntu-latest
    needs: build_and_push
    environment: production
    steps:
      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            whoami
            docker stop ${{ vars.CONTAINER_NAME }} || true && docker rm ${{ vars.CONTAINER_NAME }} || true
            docker pull ${{ vars.IMAGE_NAME }}
            docker run -d -p ${{ secrets.API_PORT }}:3000 --name ${{ vars.CONTAINER_NAME }} ${{ vars.IMAGE_NAME }}
