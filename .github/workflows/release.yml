name: Release

on:
  push:
    branches:
      - master
      - main
      - next
      - next-major
      - beta
      - alpha

permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    outputs:
      new_tag_version: ${{ steps.get_version.outputs.new_tag_version }}
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance verification
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm install
      - name: Dry run to get the next release version
        id: tag_version
        run: |
          NEXT_TAG_VERSION=$(npx semantic-release --dry-run | grep 'The next release version is' | sed -E 's/.* ([[:digit:].]+)$/\1/')
          echo "new_tag_version=${NEXT_TAG_VERSION}" >> $GITHUB_ENV
          echo "::set-output name=new_tag_version::${NEXT_TAG_VERSION}"
      - name: Build app
        run: npm run build
      - name: Semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release
